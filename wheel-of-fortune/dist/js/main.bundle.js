(()=>{"use strict";var n={5:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},190:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}},201:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},307:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",i=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),i&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),i&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,i,s,r){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(i)for(var a=0;a<this.length;a++){var A=this[a][0];null!=A&&(o[A]=!0)}for(var c=0;c<n.length;c++){var h=[].concat(n[c]);i&&o[h[0]]||(void 0!==r&&(void 0===h[5]||(h[1]="@layer".concat(h[5].length>0?" ".concat(h[5]):""," {").concat(h[1],"}")),h[5]=r),e&&(h[2]?(h[1]="@media ".concat(h[2]," {").concat(h[1],"}"),h[2]=e):h[2]=e),s&&(h[4]?(h[1]="@supports (".concat(h[4],") {").concat(h[1],"}"),h[4]=s):h[4]="".concat(s)),t.push(h))}},t}},378:n=>{var t={};n.exports=function(n,e){var i=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(e)}},450:(n,t,e)=>{e.d(t,{A:()=>a});var i=e(917),s=e.n(i),r=e(307),o=e.n(r)()(s());o.push([n.id,"* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: 'Roboto', sans-serif;\n}\n\nbody {\n  background-color: #f5f5f5;\n  color: #333;\n  line-height: 1.6;\n}\n\n.container {\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n}\n\nh1 {\n  margin-bottom: 2rem;\n  color: #2c3e50;\n}\n\n.wheel-container {\n  position: relative;\n  margin: 0 auto 2rem;\n  width: 500px;\n  height: 500px;\n}\n\ncanvas {\n  position: relative;\n  z-index: 1;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n}\n\n#spin-btn {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 2;\n  background-color: #e74c3c;\n  color: white;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  cursor: pointer;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n}\n\n#spin-btn:hover {\n  background-color: #c0392b;\n  transform: translate(-50%, -50%) scale(1.1);\n}\n\n.controls {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n  flex-wrap: wrap;\n}\n\n.name-input, .name-list {\n  flex: 1;\n  min-width: 300px;\n  padding: 1rem;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  margin: 0.5rem;\n}\n\ninput {\n  padding: 0.5rem;\n  width: 70%;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  padding: 0.5rem 1rem;\n  background-color: #3498db;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\nbutton:hover {\n  background-color: #2980b9;\n}\n\n#reset-btn {\n  background-color: #95a5a6;\n  margin-top: 1rem;\n}\n\n#reset-btn:hover {\n  background-color: #7f8c8d;\n}\n\nul {\n  list-style: none;\n  margin-top: 1rem;\n  max-height: 200px;\n  overflow-y: auto;\n}\n\nli {\n  padding: 0.5rem;\n  border-bottom: 1px solid #eee;\n  display: flex;\n  justify-content: space-between;\n}\n\nli button {\n  background-color: #e74c3c;\n  padding: 0.2rem 0.5rem;\n  font-size: 0.8rem;\n}\n\nli button:hover {\n  background-color: #c0392b;\n}\n\n#winner-display {\n  margin-top: 1rem;\n  padding: 0.5rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: #2c3e50;\n  position: absolute;\n  bottom: -40px;\n  left: 0;\n  right: 0;\n  text-align: center;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,SAAS;EACT,UAAU;EACV,iCAAiC;AACnC;;AAEA;EACE,yBAAyB;EACzB,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,cAAc;EACd,aAAa;EACb,kBAAkB;AACpB;;AAEA;EACE,mBAAmB;EACnB,cAAc;AAChB;;AAEA;EACE,kBAAkB;EAClB,mBAAmB;EACnB,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,kBAAkB;EAClB,UAAU;EACV,yCAAyC;EACzC,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,UAAU;EACV,yBAAyB;EACzB,YAAY;EACZ,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,iBAAiB;EACjB,eAAe;EACf,wCAAwC;EACxC,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;EACzB,2CAA2C;AAC7C;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,gBAAgB;EAChB,eAAe;AACjB;;AAEA;EACE,OAAO;EACP,gBAAgB;EAChB,aAAa;EACb,uBAAuB;EACvB,kBAAkB;EAClB,yCAAyC;EACzC,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,UAAU;EACV,sBAAsB;EACtB,kBAAkB;AACpB;;AAEA;EACE,oBAAoB;EACpB,yBAAyB;EACzB,YAAY;EACZ,YAAY;EACZ,kBAAkB;EAClB,eAAe;EACf,sCAAsC;AACxC;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;EACzB,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,6BAA6B;EAC7B,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,yBAAyB;EACzB,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,gBAAgB;EAChB,eAAe;EACf,iBAAiB;EACjB,iBAAiB;EACjB,cAAc;EACd,kBAAkB;EAClB,aAAa;EACb,OAAO;EACP,QAAQ;EACR,kBAAkB;AACpB",sourcesContent:["* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n  font-family: 'Roboto', sans-serif;\n}\n\nbody {\n  background-color: #f5f5f5;\n  color: #333;\n  line-height: 1.6;\n}\n\n.container {\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 2rem;\n  text-align: center;\n}\n\nh1 {\n  margin-bottom: 2rem;\n  color: #2c3e50;\n}\n\n.wheel-container {\n  position: relative;\n  margin: 0 auto 2rem;\n  width: 500px;\n  height: 500px;\n}\n\ncanvas {\n  position: relative;\n  z-index: 1;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\n  border-radius: 50%;\n}\n\n#spin-btn {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 2;\n  background-color: #e74c3c;\n  color: white;\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: bold;\n  cursor: pointer;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n}\n\n#spin-btn:hover {\n  background-color: #c0392b;\n  transform: translate(-50%, -50%) scale(1.1);\n}\n\n.controls {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n  flex-wrap: wrap;\n}\n\n.name-input, .name-list {\n  flex: 1;\n  min-width: 300px;\n  padding: 1rem;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n  margin: 0.5rem;\n}\n\ninput {\n  padding: 0.5rem;\n  width: 70%;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  padding: 0.5rem 1rem;\n  background-color: #3498db;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\nbutton:hover {\n  background-color: #2980b9;\n}\n\n#reset-btn {\n  background-color: #95a5a6;\n  margin-top: 1rem;\n}\n\n#reset-btn:hover {\n  background-color: #7f8c8d;\n}\n\nul {\n  list-style: none;\n  margin-top: 1rem;\n  max-height: 200px;\n  overflow-y: auto;\n}\n\nli {\n  padding: 0.5rem;\n  border-bottom: 1px solid #eee;\n  display: flex;\n  justify-content: space-between;\n}\n\nli button {\n  background-color: #e74c3c;\n  padding: 0.2rem 0.5rem;\n  font-size: 0.8rem;\n}\n\nli button:hover {\n  background-color: #c0392b;\n}\n\n#winner-display {\n  margin-top: 1rem;\n  padding: 0.5rem;\n  font-size: 1.2rem;\n  font-weight: bold;\n  color: #2c3e50;\n  position: absolute;\n  bottom: -40px;\n  left: 0;\n  right: 0;\n  text-align: center;\n}"],sourceRoot:""}]);const a=o},453:n=>{var t=[];function e(n){for(var e=-1,i=0;i<t.length;i++)if(t[i].identifier===n){e=i;break}return e}function i(n,i){for(var r={},o=[],a=0;a<n.length;a++){var A=n[a],c=i.base?A[0]+i.base:A[0],h=r[c]||0,l="".concat(c," ").concat(h);r[c]=h+1;var d=e(l),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==d)t[d].references++,t[d].updater(p);else{var m=s(p,i);i.byIndex=a,t.splice(a,0,{identifier:l,updater:m,references:1})}o.push(l)}return o}function s(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,s){var r=i(n=n||[],s=s||{});return function(n){n=n||[];for(var o=0;o<r.length;o++){var a=e(r[o]);t[a].references--}for(var A=i(n,s),c=0;c<r.length;c++){var h=e(r[c]);0===t[h].references&&(t[h].updater(),t.splice(h,1))}r=A}}},458:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var i="";e.supports&&(i+="@supports (".concat(e.supports,") {")),e.media&&(i+="@media ".concat(e.media," {"));var s=void 0!==e.layer;s&&(i+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),i+=e.css,s&&(i+="}"),e.media&&(i+="}"),e.supports&&(i+="}");var r=e.sourceMap;r&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(r))))," */")),t.styleTagTransform(i,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},917:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),r="/*# ".concat(s," */");return[t].concat([r]).join("\n")}return[t].join("\n")}}},t={};function e(i){var s=t[i];if(void 0!==s)return s.exports;var r=t[i]={id:i,exports:{}};return n[i](r,r.exports,e),r.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var i in t)e.o(t,i)&&!e.o(n,i)&&Object.defineProperty(n,i,{enumerable:!0,get:t[i]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0;var i=e(453),s=e.n(i),r=e(458),o=e.n(r),a=e(378),A=e.n(a),c=e(5),h=e.n(c),l=e(201),d=e.n(l),p=e(190),m=e.n(p),u=e(450),g={};g.styleTagTransform=m(),g.setAttributes=h(),g.insert=A().bind(null,"head"),g.domAPI=o(),g.insertStyleElement=d(),s()(u.A,g),u.A&&u.A.locals&&u.A.locals;class f{constructor(){var n,t,e;this.segments=[],this.isSpinning=!1,this.rotation=0,this.spinAngle=0,this.deceleration=.98,this.minSpinSpeed=.005,this.currentSpinSpeed=0,this.colors=["#FF6384","#36A2EB","#FFCE56","#4BC0C0","#9966FF","#FF9F40","#8AC148","#F25278","#6ACDEB","#FF8C52","#00D2B8","#F68FFF"],this.canvas=document.getElementById("wheel"),this.ctx=this.canvas.getContext("2d"),this.centerX=this.canvas.width/2,this.centerY=this.canvas.height/2,this.radius=Math.min(this.centerX,this.centerY)-10,this.nameInput=document.getElementById("name-input"),this.namesList=document.getElementById("names-container"),this.winnerDisplay=document.getElementById("winner-display"),null===(n=document.getElementById("add-name-btn"))||void 0===n||n.addEventListener("click",(()=>this.addName())),null===(t=document.getElementById("reset-btn"))||void 0===t||t.addEventListener("click",(()=>this.resetNames())),null===(e=document.getElementById("spin-btn"))||void 0===e||e.addEventListener("click",(()=>this.startSpin())),this.nameInput.addEventListener("keyup",(n=>{"Enter"===n.key&&this.addName()})),this.loadNames(),this.drawWheel()}loadNames(){const n=localStorage.getItem("wheelNames");n&&JSON.parse(n).forEach((n=>this.addNameToWheel(n))),0===this.segments.length&&["Alice","Bob","Charlie","David"].forEach((n=>this.addNameToWheel(n)))}saveNames(){const n=this.segments.map((n=>n.name));localStorage.setItem("wheelNames",JSON.stringify(n))}addName(){const n=this.nameInput.value.trim();n&&(this.addNameToWheel(n),this.nameInput.value="",this.nameInput.focus())}addNameToWheel(n){const t=this.segments.length%this.colors.length;this.segments.push({name:n,color:this.colors[t]}),this.updateNamesList(),this.drawWheel(),this.saveNames()}updateNamesList(){this.namesList.innerHTML="",this.segments.forEach(((n,t)=>{const e=document.createElement("li");e.textContent=n.name;const i=document.createElement("button");i.textContent="X",i.addEventListener("click",(()=>this.removeName(t))),e.appendChild(i),this.namesList.appendChild(e)}))}removeName(n){this.segments.splice(n,1),this.updateNamesList(),this.drawWheel(),this.saveNames()}resetNames(){this.segments=[],this.updateNamesList(),this.drawWheel(),this.saveNames(),this.winnerDisplay.textContent=""}drawWheel(){if(this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height),this.ctx.beginPath(),this.ctx.arc(this.centerX,this.centerY,this.radius,0,2*Math.PI),this.ctx.fillStyle="white",this.ctx.fill(),this.ctx.strokeStyle="#333",this.ctx.lineWidth=3,this.ctx.stroke(),0===this.segments.length)return this.ctx.fillStyle="#333",this.ctx.font="20px Roboto",this.ctx.textAlign="center",void this.ctx.fillText("Add names to start!",this.centerX,this.centerY);const n=2*Math.PI/this.segments.length;for(let t=0;t<this.segments.length;t++){if(!this.segments[t]){console.error(`Segment at index ${t} is undefined. Total segments: ${this.segments.length}`);continue}const e=this.rotation+t*n,i=this.rotation+(t+1)*n;this.ctx.beginPath(),this.ctx.moveTo(this.centerX,this.centerY),this.ctx.arc(this.centerX,this.centerY,this.radius,e,i),this.ctx.closePath(),this.ctx.fillStyle=this.segments[t].color,this.ctx.fill(),this.ctx.strokeStyle="#fff",this.ctx.lineWidth=2,this.ctx.stroke(),this.ctx.save(),this.ctx.translate(this.centerX,this.centerY),this.ctx.rotate(e+n/2),this.ctx.textAlign="right",this.ctx.fillStyle="#fff",this.ctx.font="bold 16px Roboto",this.ctx.fillText(this.segments[t].name,this.radius-20,6),this.ctx.restore()}this.ctx.beginPath(),this.ctx.arc(this.centerX,this.centerY,20,0,2*Math.PI),this.ctx.fillStyle="#333",this.ctx.fill(),this.ctx.beginPath(),this.ctx.moveTo(this.centerX,this.centerY-this.radius+10),this.ctx.lineTo(this.centerX-25,this.centerY-this.radius-30),this.ctx.lineTo(this.centerX+25,this.centerY-this.radius-30),this.ctx.closePath(),this.ctx.fillStyle="#e74c3c",this.ctx.fill(),this.ctx.strokeStyle="#333",this.ctx.lineWidth=2,this.ctx.stroke()}startSpin(){if(this.isSpinning||0===this.segments.length)return;this.isSpinning=!0,this.currentSpinSpeed=.2+.2*Math.random(),this.spinAngle=0,this.winnerDisplay.textContent="";const n=document.getElementById("spin-btn");n.style.pointerEvents="none",n.textContent="SPINNING",this.animateSpin()}animateSpin(){this.rotation+=this.currentSpinSpeed,this.spinAngle+=this.currentSpinSpeed,this.currentSpinSpeed*=this.deceleration,this.rotation%=2*Math.PI,this.drawWheel(),this.currentSpinSpeed>this.minSpinSpeed?requestAnimationFrame((()=>this.animateSpin())):this.finishSpin()}finishSpin(){this.isSpinning=!1;const n=document.getElementById("spin-btn");if(n.style.pointerEvents="auto",n.textContent="SPIN",0===this.segments.length)return;const t=2*Math.PI/this.segments.length;let e=Math.floor((1.5*Math.PI-this.rotation)/t);if(e=(e%this.segments.length+this.segments.length)%this.segments.length,this.segments[e]){const n=this.segments[e].name;this.winnerDisplay.textContent=`Winner: ${n}!`,this.winnerDisplay.style.animation="none",setTimeout((()=>{this.winnerDisplay.style.animation="pulse 0.5s 3"}),10)}else console.error("Winner segment is undefined",{winnerIndex:e,segments:this.segments}),this.winnerDisplay.textContent="Error determining winner!"}}document.addEventListener("DOMContentLoaded",(()=>{new f}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,